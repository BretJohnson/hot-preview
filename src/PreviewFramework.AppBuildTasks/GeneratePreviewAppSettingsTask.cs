using Microsoft.Build.Framework;

namespace PreviewFramework.AppBuildTasks
{
    public class GeneratePreviewAppSettingsTask : Microsoft.Build.Utilities.Task
    {
        [Required]
        public required string ProjectPath { get; set; }

        [Required]
        public required string OutputPath { get; set; }

        public override bool Execute()
        {
            try
            {
                string projectPath = Path.GetFullPath(ProjectPath);
                string outputPath = Path.GetFullPath(OutputPath);
                string? outputDirectory = Path.GetDirectoryName(outputPath);

                if (outputDirectory is not null && !Directory.Exists(outputDirectory))
                {
                    Directory.CreateDirectory(outputDirectory);
                }

                string content = @"// <auto-generated/>
using System.Runtime.CompilerServices;
using System.Threading.Tasks;

namespace PreviewFramework.App
{
    public static class PreviewApplicationInitializer
    {
        [ModuleInitializer]
        public static void Initialize()
        {
            var previewApp = PreviewApplicationRetriever.GetPreviewApplication();
            if (previewApp != null)
            {
                previewApp.ProjectPath = @"""" + projectPath + @""";
                previewApp.ToolingConnectionString = @"""" + "" + @""";
            }
        }
    }
}";

                File.WriteAllText(outputPath, content);
                return true;
            }
            catch (Exception ex)
            {
                Log.LogErrorFromException(ex);
                return false;
            }
        }
    }
}
