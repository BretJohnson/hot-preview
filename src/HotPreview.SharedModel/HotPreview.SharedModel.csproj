<Project Sdk="Microsoft.NET.Sdk">
  <PropertyGroup>
    <TargetFramework>netstandard2.0</TargetFramework>
    <ImplicitUsings>disable</ImplicitUsings>
    <!-- Ensure transitive compile-time assemblies are copied to output for ILRepack -->
    <CopyLocalLockFileAssemblies>true</CopyLocalLockFileAssemblies>
    <!-- Ensure downstream projects compile against the implementation assembly (with merged types) -->
    <ProduceReferenceAssembly>false</ProduceReferenceAssembly>
    <!-- Toggle ILRepack; set to false to disable merging locally -->
    <HotPreviewRepack>true</HotPreviewRepack>
  </PropertyGroup>

  <ItemGroup>
    <InternalsVisibleTo Include="HotPreview.SharedModel.Tests" />
    <InternalsVisibleTo Include="HotPreview.App.Wpf" />
    <InternalsVisibleTo Include="HotPreview.App.Maui" />
    <InternalsVisibleTo Include="HotPreview.Tooling" />
  </ItemGroup>

  <ItemGroup>
    <PackageReference Include="Microsoft.Extensions.DependencyInjection.Abstractions" Version="9.0.4" />
    <!-- Runtime dependency required by StreamJsonRpc on netstandard2.0; do not repack -->
    <PackageReference Include="Microsoft.Bcl.AsyncInterfaces" Version="9.0.4" />
    <!-- Keep StreamJsonRpc for compile-time, but do not expose it transitively in the nupkg -->
    <PackageReference Include="StreamJsonRpc" Version="2.22.11">
      <PrivateAssets>all</PrivateAssets>
    </PackageReference>
    <!-- Resolve transitive dependency needed by ILRepack when reading StreamJsonRpc metadata -->
    <PackageReference Include="Newtonsoft.Json" Version="13.0.3">
      <PrivateAssets>all</PrivateAssets>
    </PackageReference>
    <!-- MSBuild task to run ILRepack as part of build -->
    <PackageReference Include="ILRepack.Lib.MSBuild.Task" Version="2.0.31">
      <PrivateAssets>all</PrivateAssets>
    </PackageReference>
  </ItemGroup>

  <ItemGroup>
    <ProjectReference Include="..\HotPreview\HotPreview.csproj" />
  </ItemGroup>

  <ItemGroup>
    <!-- Include the AppBuildTasks assembly and associated targets file in the NuGet package, so the platform NuGets can use the task -->
    <None Include="..\..\bin\HotPreview.AppBuildTasks\$(Configuration)\netstandard2.0\HotPreview.AppBuildTasks.dll" Pack="true" PackagePath="buildTransitive\HotPreview.AppBuildTasks.dll" />
    <None Include="buildTransitive\HotPreview.SharedModel.targets" Pack="true" PackagePath="buildTransitive\HotPreview.SharedModel.targets" />
    <!-- Also include HotPreview.SharedModel.dll next to the task so MSBuild can resolve the dependency when executing the task -->
    <None Include="$(TargetPath)" Pack="true" PackagePath="buildTransitive\HotPreview.SharedModel.dll" />
  </ItemGroup>

  <!-- Repack StreamJsonRpc (and its direct dependency Nerdbank.Streams) into this assembly -->
  <Target Name="RepackHotPreviewSharedModel" AfterTargets="Build" Condition="'$(HotPreviewRepack)' != 'false'">
    <ItemGroup>
      <_IlRepackInputs Include="$(TargetPath)" />
      <_IlRepackInputs Include="$(TargetDir)StreamJsonRpc.dll" Condition="Exists('$(TargetDir)StreamJsonRpc.dll')" />
      <_IlRepackInputs Include="$(TargetDir)Microsoft.VisualStudio.Validation.dll" Condition="Exists('$(TargetDir)Microsoft.VisualStudio.Validation.dll')" />
      <!-- Prevent renaming of the auto-generated resource accessor to keep manifest resource lookup working -->
      <_IlRepackInternalizeExclude Include="StreamJsonRpc.Resources" />
    </ItemGroup>

    <!-- Only run if StreamJsonRpc was resolved to a local copy -->
    <ILRepack
      Parallel="true"
      DebugInfo="true"
      InputAssemblies="@(_IlRepackInputs)"
      OutputFile="$(TargetPath)"
      Internalize="true"
      RenameInternalized="true"
      InternalizeExclude="@(_IlRepackInternalizeExclude)"
      TargetKind="SameAsPrimaryAssembly"
      LibraryPath="$(TargetDir)">
    </ILRepack>
  </Target>

</Project>
